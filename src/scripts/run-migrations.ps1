# Script para executar migra√ß√µes do Prisma
Write-Host "üóÑÔ∏è Executando migra√ß√µes do Prisma..." -ForegroundColor Green

# Verificar se o Prisma est√° instalado
if (-not (Get-Command "npx" -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Node.js/npx n√£o encontrado. Instale o Node.js primeiro." -ForegroundColor Red
    exit 1
}

try {
    Write-Host "üì¶ Gerando cliente Prisma..." -ForegroundColor Yellow
    npx prisma generate

    Write-Host "üóÑÔ∏è Aplicando migra√ß√µes do banco de dados..." -ForegroundColor Yellow
    npx prisma migrate deploy

    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Migra√ß√µes aplicadas com sucesso!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã Tabelas criadas/atualizadas:" -ForegroundColor Cyan
        Write-Host "  ‚Ä¢ User" -ForegroundColor White
        Write-Host "  ‚Ä¢ Profile" -ForegroundColor White
        Write-Host "  ‚Ä¢ AuthToken" -ForegroundColor White
        Write-Host "  ‚Ä¢ Role" -ForegroundColor White
        Write-Host "  ‚Ä¢ Permission" -ForegroundColor White
        Write-Host "  ‚Ä¢ Event" -ForegroundColor White
        Write-Host "  ‚Ä¢ EventOrganizer" -ForegroundColor White
        Write-Host "  ‚Ä¢ EventTicket" -ForegroundColor White
        Write-Host "  ‚Ä¢ Ticket" -ForegroundColor White
        Write-Host ""
        Write-Host "üéâ Banco de dados est√° pronto!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erro ao aplicar migra√ß√µes" -ForegroundColor Red
        exit 1
    }

} catch {
    Write-Host "‚ùå Erro ao executar migra√ß√µes: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}
